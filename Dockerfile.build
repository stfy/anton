# syntax=docker/dockerfile:1.5-labs
FROM 070998/ton-emulator-alpine:latest AS emulator-builder

# build
FROM golang:1.19-alpine AS builder

RUN apk --no-cache add make git gcc libtool musl-dev ca-certificates dumb-init
RUN apk add --no-cache build-base

#prepare env
WORKDIR /go/src/github.com/tonindexer/anton

RUN go install github.com/swaggo/swag/cmd/swag@v1.8.10

# download dependencies
COPY go.mod go.sum /go/src/github.com/tonindexer/anton/
RUN go mod download

# copy application code
COPY migrations /go/src/github.com/tonindexer/anton/migrations
COPY cmd /go/src/github.com/tonindexer/anton/cmd
COPY addr /go/src/github.com/tonindexer/anton/addr
COPY abi /go/src/github.com/tonindexer/anton/abi
COPY internal /go/src/github.com/tonindexer/anton/internal
COPY main.go /go/src/github.com/tonindexer/anton

RUN rm /go/pkg/mod/github.com/tonkeeper/tongo@v1.3.0/lib/linux/libemulator.so
COPY --from=emulator-builder /output/libemulator.so /lib/libemulator.so

RUN swag init \
        --output api/http --generalInfo internal/api/http/controller.go \
        --parseDependency --parseInternal

RUN go build -ldflags="-w -s" -tags musl -o /anton /go/src/github.com/tonindexer/anton

# application
FROM alpine

FROM ubuntu:20.04 as runner

RUN apt-get update && \
    apt-get install -y openssl ca-certificates libsecp256k1-0 libsodium23 && \
    rm -rf /var/lib/apt/lists/*

COPY --from=build /go/pkg/mod/github.com/tonkeeper/tongo*/lib/linux /app/lib/

ENV LD_LIBRARY_PATH=/app/lib/

COPY --from=builder /lib/libemulator.so /lib
COPY --from=builder /go/src/github.com/tonindexer/anton/abi/known /var/anton/known
COPY --from=builder /anton /usr/bin/anton

ENV LISTEN=0.0.0.0:8080
EXPOSE 8080

ENTRYPOINT ["/usr/bin/anton"]
