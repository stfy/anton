basePath: /api/v0
definitions:
  abi.GetMethodDesc:
    properties:
      arguments:
        items:
          $ref: '#/definitions/abi.VmValueDesc'
        type: array
      name:
        type: string
      return_values:
        items:
          $ref: '#/definitions/abi.VmValueDesc'
        type: array
    type: object
  abi.GetMethodExecution:
    properties:
      arguments:
        items:
          $ref: '#/definitions/abi.VmValueDesc'
        type: array
      error:
        type: string
      name:
        type: string
      receives:
        items: {}
        type: array
      return_values:
        items:
          $ref: '#/definitions/abi.VmValueDesc'
        type: array
      returns:
        items: {}
        type: array
    type: object
  abi.OperationDesc:
    properties:
      body:
        items:
          $ref: '#/definitions/abi.TLBFieldDesc'
        type: array
      op_code:
        type: string
      op_name:
        type: string
      type:
        type: string
    type: object
  abi.StackType:
    enum:
    - int
    - cell
    - slice
    type: string
    x-enum-varnames:
    - VmInt
    - VmCell
    - VmSlice
  abi.TLBFieldDesc:
    properties:
      format:
        $ref: '#/definitions/abi.TLBType'
      name:
        type: string
      optional:
        type: boolean
      struct_fields:
        allOf:
        - $ref: '#/definitions/abi.TLBFieldsDesc'
        description: Format = "struct"
      tlb_type:
        type: string
    type: object
  abi.TLBFieldsDesc:
    items:
      $ref: '#/definitions/abi.TLBFieldDesc'
    type: array
  abi.TLBType:
    enum:
    - addr
    - bool
    - bigInt
    - string
    - bytes
    - cell
    - slice
    - content
    - struct
    - tag
    type: string
    x-enum-varnames:
    - TLBAddr
    - TLBBool
    - TLBBigInt
    - TLBString
    - TLBBytes
    - TLBCell
    - TLBSlice
    - TLBContentCell
    - TLBStructCell
    - TLBTag
  abi.VmValueDesc:
    properties:
      format:
        $ref: '#/definitions/abi.TLBType'
      name:
        type: string
      stack_type:
        $ref: '#/definitions/abi.StackType'
      struct_fields:
        description: Format = "struct"
        items:
          $ref: '#/definitions/abi.TLBFieldDesc'
        type: array
    type: object
  aggregate.AccountsRes:
    properties:
      items:
        description: NFT minter
        type: integer
      owned_balance:
        items:
          properties:
            balance:
              $ref: '#/definitions/bunbig.Int'
            owner_address:
              items:
                type: integer
              type: array
            wallet_address:
              items:
                type: integer
              type: array
          type: object
        type: array
      owned_items:
        items:
          properties:
            items_count:
              type: integer
            owner_address:
              items:
                type: integer
              type: array
          type: object
        type: array
      owned_jetton_wallets:
        type: integer
      owned_nft_collections:
        type: integer
      owned_nft_items:
        type: integer
      owners_count:
        type: integer
      total_supply:
        $ref: '#/definitions/bunbig.Int'
      transactions_count:
        description: Address statistics
        type: integer
      unique_owners:
        items:
          properties:
            item_address:
              items:
                type: integer
              type: array
            owners_count:
              type: integer
          type: object
        type: array
      wallets:
        description: FT minter
        type: integer
    type: object
  aggregate.AddressStatusCount:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
  aggregate.AddressTypesCount:
    properties:
      count:
        type: integer
      interfaces:
        items:
          type: string
        type: array
    type: object
  aggregate.MessagesRes:
    properties:
      received_count:
        type: integer
      received_from_address:
        items:
          properties:
            amount:
              $ref: '#/definitions/bunbig.Int'
            count:
              type: integer
            sender:
              items:
                type: integer
              type: array
          type: object
        type: array
      received_ton_amount:
        $ref: '#/definitions/bunbig.Int'
      sent_count:
        type: integer
      sent_to_address:
        items:
          properties:
            amount:
              $ref: '#/definitions/bunbig.Int'
            count:
              type: integer
            receiver:
              items:
                type: integer
              type: array
          type: object
        type: array
      sent_ton_amount:
        $ref: '#/definitions/bunbig.Int'
    type: object
  aggregate.Statistics:
    properties:
      account_count:
        type: integer
      address_count:
        type: integer
      address_count_by_interfaces:
        items:
          $ref: '#/definitions/aggregate.AddressTypesCount'
        type: array
      address_count_by_status:
        items:
          $ref: '#/definitions/aggregate.AddressStatusCount'
        type: array
      contract_interface_count:
        type: integer
      contract_operation_count:
        type: integer
      first_masterchain_block:
        type: integer
      last_masterchain_block:
        type: integer
      masterchain_block_count:
        type: integer
      message_count:
        type: integer
      message_count_by_operation:
        items:
          properties:
            count:
              type: integer
            operation:
              type: string
          type: object
        type: array
      parsed_account_count:
        type: integer
      parsed_address_count:
        type: integer
      parsed_message_count:
        type: integer
      transaction_count:
        type: integer
    type: object
  bunbig.Int:
    type: object
  core.AccountState:
    properties:
      address:
        items:
          type: integer
        type: array
      balance:
        $ref: '#/definitions/bunbig.Int'
      block_seq_no:
        type: integer
      code:
        items:
          type: integer
        type: array
      code_hash:
        items:
          type: integer
        type: array
      content_description:
        type: string
      content_image:
        type: string
      content_image_data:
        items:
          type: integer
        type: array
      content_name:
        type: string
      content_uri:
        type: string
      data:
        items:
          type: integer
        type: array
      data_hash:
        items:
          type: integer
        type: array
      executed_get_methods:
        additionalProperties:
          items:
            $ref: '#/definitions/abi.GetMethodExecution'
          type: array
        type: object
      fake:
        type: boolean
      get_method_hashes:
        items:
          type: integer
        type: array
      is_active:
        type: boolean
      jetton_balance:
        type: string
      label:
        $ref: '#/definitions/core.AddressLabel'
      last_tx_hash:
        items:
          type: integer
        type: array
      last_tx_lt:
        type: integer
      minter_address:
        items:
          type: integer
        type: array
      owner_address:
        description: common fields for FT and NFT
        items:
          type: integer
        type: array
      shard:
        type: integer
      state_hash:
        description: only if account is frozen
        items:
          type: integer
        type: array
      status:
        description: 'TODO: ch enum'
        type: string
      types:
        items:
          type: string
        type: array
      updated_at:
        type: string
      workchain:
        type: integer
    type: object
  core.AddressLabel:
    properties:
      address:
        items:
          type: integer
        type: array
      categories:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  core.Block:
    properties:
      file_hash:
        items:
          type: integer
        type: array
      master:
        $ref: '#/definitions/core.BlockID'
      root_hash:
        items:
          type: integer
        type: array
      scanned_at:
        type: string
      seq_no:
        type: integer
      shard:
        type: integer
      shards:
        items:
          $ref: '#/definitions/core.Block'
        type: array
      transactions:
        items:
          $ref: '#/definitions/core.Transaction'
        type: array
      transactions_count:
        type: integer
      workchain:
        type: integer
    type: object
  core.BlockID:
    properties:
      seq_no:
        type: integer
      shard:
        type: integer
      workchain:
        type: integer
    type: object
  core.ContractInterface:
    properties:
      addresses:
        items:
          items:
            type: integer
          type: array
        type: array
      code:
        items:
          type: integer
        type: array
      get_method_hashes:
        items:
          type: integer
        type: array
      get_methods_descriptors:
        items:
          $ref: '#/definitions/abi.GetMethodDesc'
        type: array
      name:
        type: string
      operations:
        items:
          $ref: '#/definitions/core.ContractOperation'
        type: array
    type: object
  core.ContractOperation:
    properties:
      contract_name:
        type: string
      message_type:
        description: only internal is supported now
        type: string
      operation_id:
        type: integer
      operation_name:
        type: string
      outgoing:
        description: if operation is going from contract
        type: boolean
      schema:
        $ref: '#/definitions/abi.OperationDesc'
    type: object
  core.Message:
    properties:
      amount:
        $ref: '#/definitions/bunbig.Int'
      body:
        items:
          type: integer
        type: array
      body_hash:
        items:
          type: integer
        type: array
      bounce:
        type: boolean
      bounced:
        type: boolean
      created_at:
        type: string
      created_lt:
        type: integer
      data:
        items:
          type: integer
        type: array
      dst_address:
        items:
          type: integer
        type: array
      dst_block_seq_no:
        type: integer
      dst_contract:
        type: string
      dst_shard:
        type: integer
      dst_state:
        $ref: '#/definitions/core.AccountState'
      dst_tx_hash:
        items:
          type: integer
        type: array
      dst_tx_lt:
        type: integer
      dst_workchain:
        type: integer
      error:
        type: string
      fwd_fee:
        $ref: '#/definitions/bunbig.Int'
      hash:
        items:
          type: integer
        type: array
      ihr_disabled:
        type: boolean
      ihr_fee:
        $ref: '#/definitions/bunbig.Int'
      operation_id:
        type: integer
      operation_name:
        type: string
      src_address:
        items:
          type: integer
        type: array
      src_block_seq_no:
        type: integer
      src_contract:
        type: string
      src_shard:
        type: integer
      src_state:
        $ref: '#/definitions/core.AccountState'
      src_tx_hash:
        items:
          type: integer
        type: array
      src_tx_lt:
        type: integer
      src_workchain:
        type: integer
      state_init_code:
        items:
          type: integer
        type: array
      state_init_data:
        items:
          type: integer
        type: array
      transfer_comment:
        type: string
      type:
        description: 'TODO: ch enum'
        type: string
    type: object
  core.Transaction:
    properties:
      account:
        $ref: '#/definitions/core.AccountState'
      action_phase_result_code:
        type: integer
      address:
        items:
          type: integer
        type: array
      block_seq_no:
        type: integer
      compute_phase_exit_code:
        type: integer
      created_at:
        type: string
      created_lt:
        type: integer
      description: {}
      description_boc:
        items:
          type: integer
        type: array
      end_status:
        type: string
      hash:
        items:
          type: integer
        type: array
      in_amount:
        $ref: '#/definitions/bunbig.Int'
      in_msg:
        $ref: '#/definitions/core.Message'
      in_msg_hash:
        items:
          type: integer
        type: array
      orig_status:
        type: string
      out_amount:
        $ref: '#/definitions/bunbig.Int'
      out_msg:
        items:
          $ref: '#/definitions/core.Message'
        type: array
      out_msg_count:
        type: integer
      prev_tx_hash:
        items:
          type: integer
        type: array
      prev_tx_lt:
        type: integer
      shard:
        type: integer
      total_fees:
        $ref: '#/definitions/bunbig.Int'
      workchain:
        type: integer
    type: object
  filter.AccountsRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.AccountState'
        type: array
      total:
        type: integer
    type: object
  filter.BlocksRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.Block'
        type: array
      total:
        type: integer
    type: object
  filter.LabelsRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.AddressLabel'
        type: array
      total:
        type: integer
    type: object
  filter.MessagesRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.Message'
        type: array
      total:
        type: integer
    type: object
  filter.TransactionsRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.Transaction'
        type: array
      total:
        type: integer
    type: object
  history.AccountsRes:
    properties:
      count_results:
        items:
          properties:
            timestamp:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  history.MessagesRes:
    properties:
      count_results:
        items:
          properties:
            timestamp:
              type: string
            value:
              type: integer
          type: object
        type: array
      sum_results:
        items:
          properties:
            timestamp:
              type: string
            value:
              $ref: '#/definitions/bunbig.Int'
          type: object
        type: array
    type: object
  history.TransactionsRes:
    properties:
      count_results:
        items:
          properties:
            timestamp:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  http.GetDefinitionsRes:
    properties:
      results:
        additionalProperties:
          items:
            $ref: '#/definitions/abi.TLBFieldDesc'
          type: array
        type: object
      total:
        type: integer
    type: object
  http.GetInterfacesRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.ContractInterface'
        type: array
      total:
        type: integer
    type: object
  http.GetLabelCategoriesRes:
    properties:
      results:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  http.GetOperationsRes:
    properties:
      results:
        items:
          $ref: '#/definitions/core.ContractOperation'
        type: array
      total:
        type: integer
    type: object
host: anton.tools
info:
  contact:
    name: Anton
    url: https://anton.tools
  description: Project fetches data from TON blockchain.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Anton
  version: "0.1"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Returns account states and its parsed data
      parameters:
      - description: only given addresses
        in: query
        items:
          type: string
        name: address
        type: array
      - description: only latest account states
        in: query
        name: latest
        type: boolean
      - description: filter by interfaces
        in: query
        items:
          type: string
        name: interface
        type: array
      - description: filter FT wallets or NFT items by owner address
        in: query
        name: owner_address
        type: string
      - description: filter FT wallets or NFT items by minter address
        in: query
        name: minter_address
        type: string
      - default: DESC
        description: order by last_tx_lt
        enum:
        - ASC
        - DESC
        in: query
        name: order
        type: string
      - description: start from this last_tx_lt
        in: query
        name: after
        type: integer
      - default: 3
        description: limit
        in: query
        maximum: 10000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filter.AccountsRes'
      summary: account data
      tags:
      - account
  /accounts/aggregated:
    get:
      consumes:
      - application/json
      description: Aggregates FT or NFT data filtered by minter address
      parameters:
      - description: address on which statistics are calculated
        in: query
        name: address
        type: string
      - description: NFT collection or FT master address
        in: query
        name: minter_address
        type: string
      - default: 25
        description: limit
        in: query
        maximum: 1000000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aggregate.AccountsRes'
      summary: aggregated account data
      tags:
      - account
  /accounts/aggregated/history:
    get:
      consumes:
      - application/json
      description: Counts accounts
      parameters:
      - description: metric to show
        enum:
        - active_addresses
        in: query
        name: metric
        required: true
        type: string
      - description: filter by interfaces
        in: query
        items:
          type: string
        name: interface
        type: array
      - description: NFT collection or FT master address
        in: query
        name: minter_address
        type: string
      - description: from timestamp
        in: query
        name: from
        type: string
      - description: to timestamp
        in: query
        name: to
        type: string
      - description: group interval
        enum:
        - 24h
        - 8h
        - 4h
        - 1h
        - 15m
        in: query
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/history.AccountsRes'
      summary: aggregated accounts grouped by timestamp
      tags:
      - account
  /blocks:
    get:
      consumes:
      - application/json
      description: Returns filtered blocks
      parameters:
      - default: -1
        description: workchain
        in: query
        name: workchain
        type: integer
      - description: shard
        in: query
        name: shard
        type: integer
      - description: seq_no
        in: query
        name: seq_no
        type: integer
      - default: false
        description: include transactions
        in: query
        name: with_transactions
        type: boolean
      - default: DESC
        description: order by seq_no
        enum:
        - ASC
        - DESC
        in: query
        name: order
        type: string
      - description: start from this seq_no
        in: query
        name: after
        type: integer
      - default: 3
        description: limit
        in: query
        maximum: 100
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filter.BlocksRes'
      summary: block info
      tags:
      - block
  /contracts/definitions:
    get:
      consumes:
      - application/json
      description: Returns definitions used in messages and get-methods parsing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.GetDefinitionsRes'
      summary: struct definitions
      tags:
      - contract
  /contracts/interfaces:
    get:
      consumes:
      - application/json
      description: Returns known contract interfaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.GetInterfacesRes'
      summary: contract interfaces
      tags:
      - contract
  /contracts/operations:
    get:
      consumes:
      - application/json
      description: Returns known contract message payloads schema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.GetOperationsRes'
      summary: contract operations
      tags:
      - contract
  /labels:
    get:
      consumes:
      - application/json
      description: Search addresses by label name or category
      parameters:
      - description: filter labels by its name
        in: query
        name: name
        type: string
      - description: filter by categories
        in: query
        items:
          type: string
        name: category
        type: array
      - description: offset
        in: query
        name: offset
        type: integer
      - default: 3
        description: limit
        in: query
        maximum: 10000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filter.LabelsRes'
      summary: address labels
      tags:
      - label
  /labels/categories:
    get:
      consumes:
      - application/json
      description: Returns all possible label categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.GetLabelCategoriesRes'
      summary: address label categories
      tags:
      - label
  /messages:
    get:
      consumes:
      - application/json
      description: Returns filtered messages
      parameters:
      - description: msg hash
        in: query
        name: hash
        type: string
      - description: filter by source workchain
        in: query
        name: src_workchain
        type: integer
      - description: filter by destination workchain
        in: query
        name: dst_workchain
        type: integer
      - description: source address
        in: query
        items:
          type: string
        name: src_address
        type: array
      - description: destination address
        in: query
        items:
          type: string
        name: dst_address
        type: array
      - description: operation id in hex format or as int32
        in: query
        name: operation_id
        type: string
      - description: source contract interface
        in: query
        items:
          type: string
        name: src_contract
        type: array
      - description: destination contract interface
        in: query
        items:
          type: string
        name: dst_contract
        type: array
      - description: filter by contract operation names
        in: query
        items:
          type: string
        name: operation_name
        type: array
      - default: DESC
        description: order by created_lt
        enum:
        - ASC
        - DESC
        in: query
        name: order
        type: string
      - description: start from this created_lt
        in: query
        name: after
        type: integer
      - default: 3
        description: limit
        in: query
        maximum: 10000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filter.MessagesRes'
      summary: transaction messages
      tags:
      - transaction
  /messages/aggregated:
    get:
      consumes:
      - application/json
      description: Aggregates receivers and senders
      parameters:
      - description: address to aggregate by
        in: query
        name: address
        required: true
        type: string
      - default: amount
        description: order aggregated by amount or message count
        enum:
        - amount
        - count
        in: query
        name: order_by
        required: true
        type: string
      - default: 25
        description: limit
        in: query
        maximum: 1000000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aggregate.MessagesRes'
      summary: aggregated messages
      tags:
      - transaction
  /messages/aggregated/history:
    get:
      consumes:
      - application/json
      description: Counts messages or sums amount
      parameters:
      - description: metric to show
        enum:
        - message_count
        - message_amount_sum
        in: query
        name: metric
        required: true
        type: string
      - description: source address
        in: query
        items:
          type: string
        name: src_address
        type: array
      - description: destination address
        in: query
        items:
          type: string
        name: dst_address
        type: array
      - description: source workchain
        in: query
        name: src_workchain
        type: integer
      - description: destination workchain
        in: query
        name: dst_workchain
        type: integer
      - description: source contract interface
        in: query
        items:
          type: string
        name: src_contract
        type: array
      - description: destination contract interface
        in: query
        items:
          type: string
        name: dst_contract
        type: array
      - description: contract operation names
        in: query
        items:
          type: string
        name: operation_name
        type: array
      - description: filter FT or NFT operations by minter address
        in: query
        name: minter_address
        type: string
      - description: from timestamp
        in: query
        name: from
        type: string
      - description: to timestamp
        in: query
        name: to
        type: string
      - description: group interval
        enum:
        - 24h
        - 8h
        - 4h
        - 1h
        - 15m
        in: query
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/history.MessagesRes'
      summary: aggregated messages grouped by timestamp
      tags:
      - transaction
  /statistics:
    get:
      consumes:
      - application/json
      description: Returns statistics on blocks, transactions, messages and accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aggregate.Statistics'
      summary: statistics on all tables
      tags:
      - statistics
  /transactions:
    get:
      consumes:
      - application/json
      description: Returns transactions, states and messages
      parameters:
      - description: only given addresses
        in: query
        items:
          type: string
        name: address
        type: array
      - description: search by tx hash
        in: query
        name: hash
        type: string
      - description: search by incoming message hash
        in: query
        name: in_msg_hash
        type: string
      - description: filter by workchain
        in: query
        name: workchain
        type: integer
      - description: search by created_lt
        in: query
        name: created_lt
        type: integer
      - default: DESC
        description: order by created_lt
        enum:
        - ASC
        - DESC
        in: query
        name: order
        type: string
      - description: start from this created_lt
        in: query
        name: after
        type: integer
      - default: 3
        description: limit
        in: query
        maximum: 10000
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filter.TransactionsRes'
      summary: transactions data
      tags:
      - transaction
  /transactions/aggregated/history:
    get:
      consumes:
      - application/json
      description: Counts transactions
      parameters:
      - description: metric to show
        enum:
        - transaction_count
        in: query
        name: metric
        required: true
        type: string
      - description: tx address
        in: query
        items:
          type: string
        name: address
        type: array
      - description: filter by workchain
        in: query
        name: workchain
        type: integer
      - description: from timestamp
        in: query
        name: from
        type: string
      - description: to timestamp
        in: query
        name: to
        type: string
      - description: group interval
        enum:
        - 24h
        - 8h
        - 4h
        - 1h
        - 15m
        in: query
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/history.TransactionsRes'
      summary: aggregated transactions grouped by timestamp
      tags:
      - transaction
schemes:
- https
swagger: "2.0"
