{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Project fetches data from TON blockchain.",
        "title": "Anton",
        "contact": {
            "name": "Anton",
            "url": "https://anton.tools"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "anton.tools",
    "basePath": "/api/v0",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Returns account states and its parsed data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "account data",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "only given addresses",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "only latest account states",
                        "name": "latest",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "filter by interfaces",
                        "name": "interface",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter FT wallets or NFT items by owner address",
                        "name": "owner_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter FT wallets or NFT items by minter address",
                        "name": "minter_address",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "order by last_tx_lt",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start from this last_tx_lt",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "maximum": 10000,
                        "type": "integer",
                        "default": 3,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filter.AccountsRes"
                        }
                    }
                }
            }
        },
        "/accounts/aggregated": {
            "get": {
                "description": "Aggregates FT or NFT data filtered by minter address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "aggregated account data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address on which statistics are calculated",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "NFT collection or FT master address",
                        "name": "minter_address",
                        "in": "query"
                    },
                    {
                        "maximum": 1000000,
                        "type": "integer",
                        "default": 25,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.AccountsRes"
                        }
                    }
                }
            }
        },
        "/accounts/aggregated/history": {
            "get": {
                "description": "Counts accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "aggregated accounts grouped by timestamp",
                "parameters": [
                    {
                        "enum": [
                            "active_addresses"
                        ],
                        "type": "string",
                        "description": "metric to show",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "filter by interfaces",
                        "name": "interface",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "NFT collection or FT master address",
                        "name": "minter_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "24h",
                            "8h",
                            "4h",
                            "1h",
                            "15m"
                        ],
                        "type": "string",
                        "description": "group interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/history.AccountsRes"
                        }
                    }
                }
            }
        },
        "/blocks": {
            "get": {
                "description": "Returns filtered blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "block info",
                "parameters": [
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "workchain",
                        "name": "workchain",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "shard",
                        "name": "shard",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "seq_no",
                        "name": "seq_no",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "include transactions",
                        "name": "with_transactions",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "order by seq_no",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start from this seq_no",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "default": 3,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filter.BlocksRes"
                        }
                    }
                }
            }
        },
        "/contracts/definitions": {
            "get": {
                "description": "Returns definitions used in messages and get-methods parsing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "struct definitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetDefinitionsRes"
                        }
                    }
                }
            }
        },
        "/contracts/interfaces": {
            "get": {
                "description": "Returns known contract interfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "contract interfaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetInterfacesRes"
                        }
                    }
                }
            }
        },
        "/contracts/operations": {
            "get": {
                "description": "Returns known contract message payloads schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "contract operations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetOperationsRes"
                        }
                    }
                }
            }
        },
        "/labels": {
            "get": {
                "description": "Search addresses by label name or category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "address labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter labels by its name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "filter by categories",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10000,
                        "type": "integer",
                        "default": 3,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filter.LabelsRes"
                        }
                    }
                }
            }
        },
        "/labels/categories": {
            "get": {
                "description": "Returns all possible label categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "address label categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetLabelCategoriesRes"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "description": "Returns filtered messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "transaction messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "msg hash",
                        "name": "hash",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "filter by source workchain",
                        "name": "src_workchain",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "filter by destination workchain",
                        "name": "dst_workchain",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "source address",
                        "name": "src_address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "destination address",
                        "name": "dst_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "operation id in hex format or as int32",
                        "name": "operation_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "source contract interface",
                        "name": "src_contract",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "destination contract interface",
                        "name": "dst_contract",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "filter by contract operation names",
                        "name": "operation_name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "order by created_lt",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start from this created_lt",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "maximum": 10000,
                        "type": "integer",
                        "default": 3,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filter.MessagesRes"
                        }
                    }
                }
            }
        },
        "/messages/aggregated": {
            "get": {
                "description": "Aggregates receivers and senders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "aggregated messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address to aggregate by",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "amount",
                            "count"
                        ],
                        "type": "string",
                        "default": "amount",
                        "description": "order aggregated by amount or message count",
                        "name": "order_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 1000000,
                        "type": "integer",
                        "default": 25,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.MessagesRes"
                        }
                    }
                }
            }
        },
        "/messages/aggregated/history": {
            "get": {
                "description": "Counts messages or sums amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "aggregated messages grouped by timestamp",
                "parameters": [
                    {
                        "enum": [
                            "message_count",
                            "message_amount_sum"
                        ],
                        "type": "string",
                        "description": "metric to show",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "source address",
                        "name": "src_address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "destination address",
                        "name": "dst_address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "source workchain",
                        "name": "src_workchain",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "destination workchain",
                        "name": "dst_workchain",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "source contract interface",
                        "name": "src_contract",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "destination contract interface",
                        "name": "dst_contract",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "contract operation names",
                        "name": "operation_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter FT or NFT operations by minter address",
                        "name": "minter_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "24h",
                            "8h",
                            "4h",
                            "1h",
                            "15m"
                        ],
                        "type": "string",
                        "description": "group interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/history.MessagesRes"
                        }
                    }
                }
            }
        },
        "/statistics": {
            "get": {
                "description": "Returns statistics on blocks, transactions, messages and accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "statistics on all tables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.Statistics"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "Returns transactions, states and messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "transactions data",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "only given addresses",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by tx hash",
                        "name": "hash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by incoming message hash",
                        "name": "in_msg_hash",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "filter by workchain",
                        "name": "workchain",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "search by created_lt",
                        "name": "created_lt",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "order by created_lt",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start from this created_lt",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "maximum": 10000,
                        "type": "integer",
                        "default": 3,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filter.TransactionsRes"
                        }
                    }
                }
            }
        },
        "/transactions/aggregated/history": {
            "get": {
                "description": "Counts transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "aggregated transactions grouped by timestamp",
                "parameters": [
                    {
                        "enum": [
                            "transaction_count"
                        ],
                        "type": "string",
                        "description": "metric to show",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "tx address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "filter by workchain",
                        "name": "workchain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "to timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "24h",
                            "8h",
                            "4h",
                            "1h",
                            "15m"
                        ],
                        "type": "string",
                        "description": "group interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/history.TransactionsRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "abi.GetMethodDesc": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.VmValueDesc"
                    }
                },
                "name": {
                    "type": "string"
                },
                "return_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.VmValueDesc"
                    }
                }
            }
        },
        "abi.GetMethodExecution": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.VmValueDesc"
                    }
                },
                "error": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "receives": {
                    "type": "array",
                    "items": {}
                },
                "return_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.VmValueDesc"
                    }
                },
                "returns": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "abi.OperationDesc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.TLBFieldDesc"
                    }
                },
                "op_code": {
                    "type": "string"
                },
                "op_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "abi.StackType": {
            "type": "string",
            "enum": [
                "int",
                "cell",
                "slice"
            ],
            "x-enum-varnames": [
                "VmInt",
                "VmCell",
                "VmSlice"
            ]
        },
        "abi.TLBFieldDesc": {
            "type": "object",
            "properties": {
                "format": {
                    "$ref": "#/definitions/abi.TLBType"
                },
                "name": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                },
                "struct_fields": {
                    "description": "Format = \"struct\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/abi.TLBFieldsDesc"
                        }
                    ]
                },
                "tlb_type": {
                    "type": "string"
                }
            }
        },
        "abi.TLBFieldsDesc": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/abi.TLBFieldDesc"
            }
        },
        "abi.TLBType": {
            "type": "string",
            "enum": [
                "addr",
                "bool",
                "bigInt",
                "string",
                "bytes",
                "cell",
                "slice",
                "content",
                "struct",
                "tag"
            ],
            "x-enum-varnames": [
                "TLBAddr",
                "TLBBool",
                "TLBBigInt",
                "TLBString",
                "TLBBytes",
                "TLBCell",
                "TLBSlice",
                "TLBContentCell",
                "TLBStructCell",
                "TLBTag"
            ]
        },
        "abi.VmValueDesc": {
            "type": "object",
            "properties": {
                "format": {
                    "$ref": "#/definitions/abi.TLBType"
                },
                "name": {
                    "type": "string"
                },
                "stack_type": {
                    "$ref": "#/definitions/abi.StackType"
                },
                "struct_fields": {
                    "description": "Format = \"struct\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.TLBFieldDesc"
                    }
                }
            }
        },
        "aggregate.AccountsRes": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "NFT minter",
                    "type": "integer"
                },
                "owned_balance": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "balance": {
                                "$ref": "#/definitions/bunbig.Int"
                            },
                            "owner_address": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "wallet_address": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "owned_items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "items_count": {
                                "type": "integer"
                            },
                            "owner_address": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "owned_jetton_wallets": {
                    "type": "integer"
                },
                "owned_nft_collections": {
                    "type": "integer"
                },
                "owned_nft_items": {
                    "type": "integer"
                },
                "owners_count": {
                    "type": "integer"
                },
                "total_supply": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "transactions_count": {
                    "description": "Address statistics",
                    "type": "integer"
                },
                "unique_owners": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "item_address": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "owners_count": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "wallets": {
                    "description": "FT minter",
                    "type": "integer"
                }
            }
        },
        "aggregate.AddressStatusCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "aggregate.AddressTypesCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aggregate.MessagesRes": {
            "type": "object",
            "properties": {
                "received_count": {
                    "type": "integer"
                },
                "received_from_address": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "$ref": "#/definitions/bunbig.Int"
                            },
                            "count": {
                                "type": "integer"
                            },
                            "sender": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "received_ton_amount": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "sent_count": {
                    "type": "integer"
                },
                "sent_to_address": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "$ref": "#/definitions/bunbig.Int"
                            },
                            "count": {
                                "type": "integer"
                            },
                            "receiver": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "sent_ton_amount": {
                    "$ref": "#/definitions/bunbig.Int"
                }
            }
        },
        "aggregate.Statistics": {
            "type": "object",
            "properties": {
                "account_count": {
                    "type": "integer"
                },
                "address_count": {
                    "type": "integer"
                },
                "address_count_by_interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregate.AddressTypesCount"
                    }
                },
                "address_count_by_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregate.AddressStatusCount"
                    }
                },
                "contract_interface_count": {
                    "type": "integer"
                },
                "contract_operation_count": {
                    "type": "integer"
                },
                "first_masterchain_block": {
                    "type": "integer"
                },
                "last_masterchain_block": {
                    "type": "integer"
                },
                "masterchain_block_count": {
                    "type": "integer"
                },
                "message_count": {
                    "type": "integer"
                },
                "message_count_by_operation": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer"
                            },
                            "operation": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parsed_account_count": {
                    "type": "integer"
                },
                "parsed_address_count": {
                    "type": "integer"
                },
                "parsed_message_count": {
                    "type": "integer"
                },
                "transaction_count": {
                    "type": "integer"
                }
            }
        },
        "bunbig.Int": {
            "type": "object"
        },
        "core.AccountState": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "balance": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "block_seq_no": {
                    "type": "integer"
                },
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "code_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content_description": {
                    "type": "string"
                },
                "content_image": {
                    "type": "string"
                },
                "content_image_data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content_name": {
                    "type": "string"
                },
                "content_uri": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "data_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "executed_get_methods": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/abi.GetMethodExecution"
                        }
                    }
                },
                "fake": {
                    "type": "boolean"
                },
                "get_method_hashes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "jetton_balance": {
                    "type": "string"
                },
                "label": {
                    "$ref": "#/definitions/core.AddressLabel"
                },
                "last_tx_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "last_tx_lt": {
                    "type": "integer"
                },
                "minter_address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "owner_address": {
                    "description": "common fields for FT and NFT",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "shard": {
                    "type": "integer"
                },
                "state_hash": {
                    "description": "only if account is frozen",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "description": "TODO: ch enum",
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "workchain": {
                    "type": "integer"
                }
            }
        },
        "core.AddressLabel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "core.Block": {
            "type": "object",
            "properties": {
                "file_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "master": {
                    "$ref": "#/definitions/core.BlockID"
                },
                "root_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "scanned_at": {
                    "type": "string"
                },
                "seq_no": {
                    "type": "integer"
                },
                "shard": {
                    "type": "integer"
                },
                "shards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Block"
                    }
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Transaction"
                    }
                },
                "transactions_count": {
                    "type": "integer"
                },
                "workchain": {
                    "type": "integer"
                }
            }
        },
        "core.BlockID": {
            "type": "object",
            "properties": {
                "seq_no": {
                    "type": "integer"
                },
                "shard": {
                    "type": "integer"
                },
                "workchain": {
                    "type": "integer"
                }
            }
        },
        "core.ContractInterface": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "get_method_hashes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "get_methods_descriptors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/abi.GetMethodDesc"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.ContractOperation"
                    }
                }
            }
        },
        "core.ContractOperation": {
            "type": "object",
            "properties": {
                "contract_name": {
                    "type": "string"
                },
                "message_type": {
                    "description": "only internal is supported now",
                    "type": "string"
                },
                "operation_id": {
                    "type": "integer"
                },
                "operation_name": {
                    "type": "string"
                },
                "outgoing": {
                    "description": "if operation is going from contract",
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "#/definitions/abi.OperationDesc"
                }
            }
        },
        "core.Message": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "body": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "body_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "bounce": {
                    "type": "boolean"
                },
                "bounced": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_lt": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "dst_address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "dst_block_seq_no": {
                    "type": "integer"
                },
                "dst_contract": {
                    "type": "string"
                },
                "dst_shard": {
                    "type": "integer"
                },
                "dst_state": {
                    "$ref": "#/definitions/core.AccountState"
                },
                "dst_tx_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "dst_tx_lt": {
                    "type": "integer"
                },
                "dst_workchain": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "fwd_fee": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ihr_disabled": {
                    "type": "boolean"
                },
                "ihr_fee": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "operation_id": {
                    "type": "integer"
                },
                "operation_name": {
                    "type": "string"
                },
                "src_address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "src_block_seq_no": {
                    "type": "integer"
                },
                "src_contract": {
                    "type": "string"
                },
                "src_shard": {
                    "type": "integer"
                },
                "src_state": {
                    "$ref": "#/definitions/core.AccountState"
                },
                "src_tx_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "src_tx_lt": {
                    "type": "integer"
                },
                "src_workchain": {
                    "type": "integer"
                },
                "state_init_code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "state_init_data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "transfer_comment": {
                    "type": "string"
                },
                "type": {
                    "description": "TODO: ch enum",
                    "type": "string"
                }
            }
        },
        "core.Transaction": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/core.AccountState"
                },
                "action_phase_result_code": {
                    "type": "integer"
                },
                "address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "block_seq_no": {
                    "type": "integer"
                },
                "compute_phase_exit_code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_lt": {
                    "type": "integer"
                },
                "description": {},
                "description_boc": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "end_status": {
                    "type": "string"
                },
                "hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "in_amount": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "in_msg": {
                    "$ref": "#/definitions/core.Message"
                },
                "in_msg_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "orig_status": {
                    "type": "string"
                },
                "out_amount": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "out_msg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Message"
                    }
                },
                "out_msg_count": {
                    "type": "integer"
                },
                "prev_tx_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "prev_tx_lt": {
                    "type": "integer"
                },
                "shard": {
                    "type": "integer"
                },
                "total_fees": {
                    "$ref": "#/definitions/bunbig.Int"
                },
                "workchain": {
                    "type": "integer"
                }
            }
        },
        "filter.AccountsRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.AccountState"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "filter.BlocksRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Block"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "filter.LabelsRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.AddressLabel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "filter.MessagesRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Message"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "filter.TransactionsRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Transaction"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "history.AccountsRes": {
            "type": "object",
            "properties": {
                "count_results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "string"
                            },
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "history.MessagesRes": {
            "type": "object",
            "properties": {
                "count_results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "string"
                            },
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "sum_results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/bunbig.Int"
                            }
                        }
                    }
                }
            }
        },
        "history.TransactionsRes": {
            "type": "object",
            "properties": {
                "count_results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "string"
                            },
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "http.GetDefinitionsRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/abi.TLBFieldDesc"
                        }
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "http.GetInterfacesRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.ContractInterface"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "http.GetLabelCategoriesRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "http.GetOperationsRes": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.ContractOperation"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}